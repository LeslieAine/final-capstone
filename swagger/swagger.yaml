openapi: 3.0.3
info:
  title: House Rental App API Documentation
  version: v1
paths:
  “/api/v1/houses”:
    get:
      summary: Retrieve all houses
      responses:
        ‘200’:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ‘#/components/schemas/House’
    post:
      summary: Create a new house
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ‘#/components/schemas/HouseInput’
      responses:
        ‘201’:
          description: House created successfully
          content:
            application/json:
              schema:
                $ref: ‘#/components/schemas/House’
        ‘400’:
          $ref: ‘#/components/responses/BadRequest’
  “/api/v1/houses/{id}“:
    get:
      summary: Retrieve a house by ID
      parameters:
        - name: id
          in: path
          description: House ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        ‘200’:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: ‘#/components/schemas/House’
        ‘404’:
          $ref: ‘#/components/responses/NotFound’
    delete:
      summary: Delete a house
      parameters:
        - name: id
          in: path
          description: House ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        ‘204’:
          description: House deleted successfully
        ‘404’:
          $ref: ‘#/components/responses/NotFound’
  /reservations:
  “/api/v1/reservations”:
    get:
      summary: Retrieve all reservations
      responses:
        ‘200’:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ‘#/components/schemas/Reservation’
    post:
      summary: Create a new reservation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ‘#/components/schemas/ReservationInput’
      responses:
        ‘201’:
          description: Reservation created successfully
          content:
            application/json:
              schema:
                $ref: ‘#/components/schemas/Reservation’
        ‘400’:
          $ref: ‘#/components/responses/BadRequest’
  “/api/v1/reservations/{id}“:
    get:
      summary: Retrieve a reservation by ID
      parameters:
        - name: id
          in: path
          description: Reservation ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        ‘200’:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: ‘#/components/schemas/Reservation’
        ‘404’:
          $ref: ‘#/components/responses/NotFound’
    delete:
      summary: Delete a reservation
      parameters:
        - name: id
          in: path
          description: Reservation ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        ‘204’:
          description: Reservation deleted successfully
        ‘404’:
          $ref: ‘#/components/responses/NotFound’
components:
  schemas:
    House:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        location:
          type: string
        bedrooms:
          type: number
        bathrooms:
          type: number
        price:
          type: number
        image:
          type: string
      required:
        - name
        - location
        - bedrooms
        - bathrooms
        - price
        - image
    HouseInput:
      type: object
      properties:
        name:
          type: string
        user_id:
          type: number
        location:
          type: string
        bedrooms:
          type: number
        bathrooms:
          type: number
        price:
          type: number
        image:
          type: string
      required:
        - name
        - location
        - bedrooms
        - bathrooms
        - price
        - image
    Reservation:
      type: object
      properties:
        id:
          type: integer
          format: int64
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        city:
          type: string
      required:
        - start_date
        - end_date
        - city
    ReservationInput:
      type: object
      properties:
        user_id:
          type: number
        house_id:
          type: number
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        city:
          type: string
      required:
        - name
        - start_date
        - end_date
        - city
  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: Bad request parameters
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: Resource not found
security:
  - JWT: []
securityDefinitions:
  JWT:
    type: apiKey
    in: header
    name: Authorization